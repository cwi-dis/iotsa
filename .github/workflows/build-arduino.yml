# Created this action based on information found in:
# - <https://github.com/marketplace/actions/test-compile-for-arduino>
# - <https://docs.github.com/en/free-pro-team@latest/actions/quickstart>
name: build-arduino
on: 
  push:
    paths-ignore:
    - '.github/workflows/build-platformio.yml'
    - 'docs/**'
  pull_request:
  workflow_dispatch:
    inputs:
      iotsa_ref:
        description: 'iotsa branch, ref or sha'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board:
        - esp32:esp32:esp32thing
        - esp8266:esp8266:nodemcuv2
        example:
        - examples/Hello
        - examples/HelloApi
        - examples/HelloCpp
        - examples/HelloPasswd
        - examples/HelloRights
        - examples/HelloToken
        - examples/HelloUser
        - examples/Led
        - examples/Light
        - examples/Log
        - examples/Skeleton
        - examples/Button
        - examples/Ringer
        - examples/DateTime
# Temporarily disabled:
#        - examples/BLELed
        - examples/Temperature
        include:
        - board: esp32:esp32:esp32thing
          partition_scheme: --board-options PartitionScheme=min_spiffs
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
   
    - name: Cache Arduino CLI
      uses: actions/cache@v4
      with:
        path: ~/.arduino15
        key: ${{ runner.os }}-arduino-${{ hashFiles('*_index.json') }}
   
    - name: Cache Arduino libraries
      uses: actions/cache@v4
      with:
        path: ~/Arduino/libraries
        key: ${{ runner.os }}-arduinolibs-${{ hashFiles('**/library.properties') }}
   
    - name: Setup Arduino CLI
      uses: arduino/setup-arduino-cli@v2

    - name: Install pyserial
      run: |
        python -m pip install --upgrade pip
        pip install pyserial
        
    - name: Install Arduino platforms and libraries
      run: |
        arduino-cli core list --all
        arduino-cli config init --overwrite
        arduino-cli config set library.enable_unsafe_install true
        arduino-cli config add board_manager.additional_urls "https://espressif.github.io/arduino-esp32/package_esp32_index.json"
        arduino-cli config add board_manager.additional_urls "https://arduino.esp8266.com/stable/package_esp8266com_index.json"
        arduino-cli core update-index
        echo xxxjack after update index
        arduino-cli core list --all
        arduino-cli core install "esp32:esp32"
        arduino-cli core install "esp8266:esp8266"
        echo xxxjack after install esp32 and esp8266
        arduino-cli core list --all
        arduino-cli core upgrade
        echo xxxjack after upgrade
        arduino-cli core list --all
        arduino-cli lib list
        arduino-cli lib install "Adafruit NeoPixel"
        arduino-cli lib install "ArduinoJson"
        arduino-cli lib install "CoAP simple library"
        arduino-cli lib install "DHT sensor library"
        arduino-cli lib install "Adafruit Unified Sensor"
        arduino-cli lib install "Ds1302"
        arduino-cli lib install "ESP32Encoder"
        arduino-cli lib install --git-url https://github.com/yutter/ArduinoJWT
        arduino-cli lib install --git-url https://github.com/jackjansen/esp32_idf5_https_server
        arduino-cli lib install --git-url https://github.com/jackjansen/esp32_idf5_https_server_compat
        arduino-cli lib list
    - name: Install iotsa library
      run: |
        mkdir -p ~/Arduino/libraries
        ln -fs $PWD ~/Arduino/libraries/iotsa

    - name: Build ${{ matrix.example }} ${{ matrix.board }}
      run: |
        arduino-cli compile --fqbn ${{ matrix.board }} ${{ matrix.partition_scheme }} ${{ matrix.example }}

    - name: Uninstall iotsa and custom libraries
      run: |
        rm -f ~/Arduino/libraries/iotsa
        ls -la ~/Arduino/libraries