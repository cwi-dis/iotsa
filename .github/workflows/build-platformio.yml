# Created this action based on information found in:
# - <https://docs.platformio.org/en/latest/integration/ci/github-actions.html>
# - <https://docs.github.com/en/free-pro-team@latest/actions/quickstart>
name: build-platformio
on: 
  push:
    paths-ignore:
    - '.github/workflows/build-arduino.yml'
    - 'docs/**'
jobs:
  #
  # Job#1 - Build all examples for all platforms, upload binaries as artifacts
  #
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board:
        - nodemcuv2
        - esp32thing
        example:
        - Hello
        - HelloApi
        - HelloCpp
        - HelloPasswd
        - HelloRights
        - HelloToken
        - HelloUser
        - Led
        - Light
        - Log
        - Skeleton
        - Button
        - Ringer
        - BLELed
        - Temperature
        build_flags: [""]
        # Extra options/settings.
        include:
        # For esp8266 we need to manually exclude esp32_https_server and esp32_https_server_compat. Probably bug in libdeps of platformio
        - board: nodemcuv2
          pio_extra_args: --project-option="lib_ignore=esp32_https_server_compat"
        # Extra build: Led with HTTPS
        - example: Led
          build_flags: -DIOTSA_WITH_HTTPS
          board: nodemcuv2
          pio_extra_args: --project-option="lib_ignore=esp32_https_server_compat"
        - example: Led
          build_flags: -DIOTSA_WITH_HTTPS
          board: esp32thing
        # Extra build: Led with COAP
        - example: Led
          build_flags: -DIOTSA_WITH_COAP
          board: nodemcuv2
          pio_extra_args: --project-option="lib_ignore=esp32_https_server_compat"
        - example: Led
          build_flags: -DIOTSA_WITH_COAP
          board: esp32thing
        # Extra build: Led with only COAP support (no web, no rest, no http/s)
        - example: Led
          build_flags: -DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS
          board: nodemcuv2
          pio_extra_args: --project-option="lib_ignore=esp32_https_server_compat"
        - example: Led
          build_flags: -DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS
          board: esp32thing
# Temporarily disabled.
#        # Extra build: BLELed with BLE added
#        - example: BLELed
#          board: esp32thing
#          build_flags: -DIOTSA_WITH_BLE
#          pio_extra_args: --project-option="board_build.partitions=no_ota.csv"
# Temporarily disabled.
#        # Extra build: BLELed with only BLE (no web, http/s, rest, wifi)
#        - example: BLELed
#          board: esp32thing
#          build_flags: -DIOTSA_WITH_BLE -DIOTSA_WITHOUT_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_API -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS
#          pio_extra_args: --project-option="board_build.partitions=no_ota.csv"
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
        pio platform install --with-package framework-arduinoespressif8266 espressif8266
        pio platform install --with-package framework-arduinoespressif32 espressif32

    - name: Install library dependencies
      run: |
        pio lib -g install "Adafruit NeoPixel@~1.3.5"
        pio lib -g install "Time@>=1.6"
        pio lib -g install "Timezone@~1.2.4"
        pio lib -g install "ArduinoJson@~6.14.1"
        pio lib -g install "ArduinoJWT@~1.0.1"
        pio lib -g install "CoAP simple library@1.3.19"
        pio lib -g install "esp32_https_server_compat@~1.0.0"
        pio lib -g install "DHT sensor library@~1.4.1"

    - name: Run PlatformIO
      run: |
        pio ci --lib="." --project-option="lib_ldf_mode=deep+" ${{ matrix.pio_extra_args }} --board=${{ matrix.board }} --keep-build-dir
      env:
        PLATFORMIO_CI_SRC: examples/${{ matrix.example }}
        PLATFORMIO_BUILD_FLAGS: ${{ matrix.build_flags }}
        
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.example }}-${{ matrix.board }}.bin
        path: .pio/build/${{ matrix.board }}/firmware.bin        
  #
  # Job#2 - dispatch build event to dependent repositories
  #
  dispatch:
#    if: only-for-develop-branch
    needs: build
    strategy:
      matrix:
        repo:
        - cwi-dis/iotsa433
        - cwi-dis/iotsaBLELed
        - cwi-dis/iotsaDMXLedstrip
        - cwi-dis/iotsaDMXSensor
        - cwi-dis/iotsaDisplayServer
        - cwi-dis/iotsaDoorOpener
        - cwi-dis/iotsaDoorbellButton
        - cwi-dis/iotsaDoorbellRinger
        - cwi-dis/iotsaGPIO
        - cwi-dis/iotsaMotorServer
        - cwi-dis/iotsaNeoClock
        - cwi-dis/iotsaOLED
        - cwi-dis/iotsaRGBWSensor
        - cwi-dis/iotsaResponseTime
        - cwi-dis/iotsaSensor
        - cwi-dis/iotsaSmartMeter
        - cwi-dis/lissabon
    runs-on: ubuntu-latest
    steps:
    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        repository: ${{ matrix.repo }}
        event-type: rebuild