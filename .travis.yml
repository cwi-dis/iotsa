language: python
python:
- '2.7'
env:
- IOTSA_EXAMPLE=Hello PLATFORMIO_CI_SRC=examples/Hello
- IOTSA_EXAMPLE=HelloApi PLATFORMIO_CI_SRC=examples/HelloApi
- IOTSA_EXAMPLE=HelloCpp PLATFORMIO_CI_SRC=examples/HelloCpp
- IOTSA_EXAMPLE=HelloPasswd PLATFORMIO_CI_SRC=examples/HelloPasswd
- IOTSA_EXAMPLE=HelloRights PLATFORMIO_CI_SRC=examples/HelloRights
- IOTSA_EXAMPLE=HelloToken PLATFORMIO_CI_SRC=examples/HelloToken
- IOTSA_EXAMPLE=HelloUser PLATFORMIO_CI_SRC=examples/HelloUser
- IOTSA_EXAMPLE=Led PLATFORMIO_CI_SRC=examples/Led
- IOTSA_EXAMPLE=Light PLATFORMIO_CI_SRC=examples/Light
- IOTSA_EXAMPLE=Log PLATFORMIO_CI_SRC=examples/Log
- IOTSA_EXAMPLE=Skeleton PLATFORMIO_CI_SRC=examples/Skeleton
- IOTSA_EXAMPLE=Button PLATFORMIO_CI_SRC=examples/Button
- IOTSA_EXAMPLE=Ringer PLATFORMIO_CI_SRC=examples/Ringer
# - IOTSA_EXAMPLE=Hello PLATFORMIO_CI_SRC=examples/Hello PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
# - IOTSA_EXAMPLE=HelloApi PLATFORMIO_CI_SRC=examples/HelloApi PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
# - IOTSA_EXAMPLE=HelloCpp PLATFORMIO_CI_SRC=examples/HelloCpp PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
# - IOTSA_EXAMPLE=HelloPasswd PLATFORMIO_CI_SRC=examples/HelloPasswd PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
# - IOTSA_EXAMPLE=HelloRights PLATFORMIO_CI_SRC=examples/HelloRights PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
# - IOTSA_EXAMPLE=HelloToken PLATFORMIO_CI_SRC=examples/HelloToken PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
# - IOTSA_EXAMPLE=HelloUser PLATFORMIO_CI_SRC=examples/HelloUser PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
- IOTSA_EXAMPLE=Led PLATFORMIO_CI_SRC=examples/Led PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
# - IOTSA_EXAMPLE=Light PLATFORMIO_CI_SRC=examples/Light PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
# - IOTSA_EXAMPLE=Log PLATFORMIO_CI_SRC=examples/Log PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
- IOTSA_EXAMPLE=Skeleton PLATFORMIO_CI_SRC=examples/Skeleton PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
- IOTSA_EXAMPLE=Button PLATFORMIO_CI_SRC=examples/Button PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
- IOTSA_EXAMPLE=Ringer PLATFORMIO_CI_SRC=examples/Ringer PLATFORMIO_BUILD_FLAGS="-DIOTSA_WITH_COAP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITH_PLACEHOLDERS"
install:
- pip install -U platformio
- platformio lib -g install "Adafruit NeoPixel@~1.1.6"
- platformio lib -g install "Time@>=1.5"
- platformio lib -g install "Timezone@~1.1.1"
- platformio lib -g install "ArduinoJson@~5.13.0"
- platformio lib -g install "ArduinoJWT@~1.0.1"
- platformio lib -g install "https://github.com/jackjansen/CoAP-simple-library.git"
script:
- platformio ci --lib="." --project-option="lib_ldf_mode=deep+" --board=nodemcuv2
- platformio lib -g install "ESP32WebServer" && platformio ci --lib="." --project-option="lib_ldf_mode=deep+" --board=esp32thing
