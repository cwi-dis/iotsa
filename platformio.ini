; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = esp32thing-example-bleled
;
; common options for all variants of iotsa
;
[common]
framework = arduino
lib_ldf_mode = deep+
lib_deps = 
    Adafruit NeoPixel
    ArduinoJson
    ArduinoJWT
    https://github.com/jackjansen/CoAP-simple-library ; CoAP simple library
    Ds1302
    littlefs
monitor_speed = 115200
; monitor_filters = esp32_exception_decoder

;
; Debug options, copy or include with ${section.option} syntax
;
[use_debug_prints]
build_flags =  -DCORE_DEBUG_LEVEL=6

[use_debugger]
debug_tool = minimodule
upload_protocol = minimodule

;
; per-processor options for variants of iotsa. Extends common options.
;

[esp8266]
extends = common
platform = espressif8266
lib_deps = 
    ${common.lib_deps}
    Time
    Timezone

[esp32]
extends = common
platform = espressif32
lib_deps = 
    ${common.lib_deps}
    https://github.com/jackjansen/esp32_https_server_compat#exp-jack-sha-header

;
; per-board options for variants of iotsa. Extends per-processor options.
;
[nodemcuv2]
extends = esp8266
board = nodemcuv2

[esp8285]
extends = esp8266
board = esp8285

[esp32thing]
extends = esp32
board = esp32thing

[lolin32]
extends = esp32
board = lolin32

[pico32]
extends = esp32
board = pico32

[example-hello]
src_filter = +<*> +<../examples/Hello>

[env:nodemcuv2-example-hello]
extends = nodemcuv2, example-hello

[env:esp32thing-example-hello]
extends = esp32thing, example-hello

[env:lolin32-example-hello]
extends = lolin32, example-hello, use_debugger

[example-HelloRights]
src_filter = +<*> +<../examples/HelloRights>

[env:nodemcuv2-example-HelloRights]
extends = nodemcuv2, example-HelloRights

[env:esp32thing-example-HelloRights]
extends = esp32thing, example-HelloRights

[example-HelloToken]
src_filter = +<*> +<../examples/HelloToken>

[env:nodemcuv2-example-HelloToken]
extends = nodemcuv2, example-HelloToken

[env:esp32thing-example-HelloToken]
extends = esp32thing, example-HelloToken

[example-skeleton]
src_filter = +<*> +<../examples/Skeleton>
build_flags =  -DIOTSA_WITH_HTTPS -DIOTSA_WITH_COAP

[env:nodemcuv2-example-skeleton]
extends = nodemcuv2, example-skeleton
build_flags = -DWITH_NTP ${example-skeleton.build_flags}

[env:esp8285-example-skeleton]
extends = esp8285, example-skeleton
build_flags = -DIOTSA_WITH_COAP

[env:esp32thing-example-skeleton]
extends = esp32thing, example-skeleton
build_flags = -DIOTSA_WITH_BLE ${example-skeleton.build_flags}
board_build.partitions = min_spiffs.csv

[env:pico32-example-skeleton]
extends = pico32, example-skeleton
build_flags = -DWITH_NTP ${example-skeleton.build_flags}
board_build.partitions = min_spiffs.csv

[env:lolin32-example-skeleton-http]
extends = lolin32, example-skeleton
build_flags =

[env:lolin32-example-skeleton]
extends = lolin32, example-skeleton

[example-datetime]
src_filter = +<*> +<../examples/DateTime>
build_flags = ; -DIOTSA_WITH_HTTPS -DIOTSA_WITH_COAP

[env:pico32-example-datetime]
extends = pico32, example-datetime
build_flags = ${example-datetime.build_flags}
board_build.partitions = min_spiffs.csv

[env:nodemcuv2-example-datetime]
extends = nodemcuv2, example-datetime
build_flags = -DWITH_NTP ${example-datetime.build_flags}

[example-bleled]
src_filter = +<*> +<../examples/BLELed>
; board_build.partitions = no_ota.csv
board_build.partitions = min_spiffs.csv

[env:nodemcuv2-example-bleled]
extends = nodemcuv2, example-bleled

[env:nodemcuv2-example-bleled-nowifi]
extends = nodemcuv2, example-bleled
build_flags = -DIOTSA_WITHOUT_WIFI -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_API -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_COAP

[env:esp32thing-example-bleled]
extends = esp32thing, example-bleled
build_flags = -DIOTSA_WITH_BLE

[env:esp32thing-example-nimbleled]
extends = esp32thing, example-bleled
build_flags = -DIOTSA_WITH_NIMBLE
lib_deps = 
    ${esp32thing.lib_deps}
    h2zero/NimBLE-Arduino
lib_ignore = 
    ESP32 BLE Arduino

[env:esp32thing-example-bleled-nowifi]
extends = esp32thing, example-bleled
build_flags = -DIOTSA_WITHOUT_WIFI -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_API -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_COAP

[env:lolin32-example-bleled]
extends = lolin32, example-bleled
; gpio15 on lolin32 can be used for minimodule debugging, so don't use it for LED.
build_flags = -DNEOPIXEL_PIN=16 -DIOTSA_WITHOUT_HTTPS

[env:lolin32-example-bleled-nowifi]
extends = lolin32, example-bleled
build_flags = -DIOTSA_WITHOUT_WIFI -DIOTSA_WITHOUT_HTTP -DIOTSA_WITHOUT_HTTPS -DIOTSA_WITHOUT_WEB -DIOTSA_WITHOUT_API -DIOTSA_WITHOUT_REST -DIOTSA_WITHOUT_COAP

[env:example-led]
src_filter = +<*> +<../examples/Led>

[env:lolin32-example-led]
extends = lolin32, example-led
build_flags = -DHTTPS_LOGLEVEL=4
